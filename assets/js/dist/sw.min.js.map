{"version":3,"file":"sw.min.js","sources":["../../../_javascript/pwa/sw.js"],"sourcesContent":["import { baseurl } from '../../_config.yml';\n\nimportScripts(`${baseurl}/assets/js/data/swconf.js`);\n\nconst purge = swconf.purge;\n\nfunction verifyUrl(url) {\n  const requestPath = new URL(url).pathname;\n\n  for (const path of swconf.denyPaths) {\n    if (requestPath.startsWith(path)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nself.addEventListener('install', (event) => {\n  if (purge) {\n    return;\n  }\n\n  event.waitUntil(\n    caches.open(swconf.cacheName).then((cache) => {\n      return cache.addAll(swconf.resources);\n    })\n  );\n});\n\nself.addEventListener('activate', (event) => {\n  event.waitUntil(\n    caches.keys().then((keyList) => {\n      return Promise.all(\n        keyList.map((key) => {\n          if (purge) {\n            return caches.delete(key);\n          } else {\n            if (key !== swconf.cacheName) {\n              return caches.delete(key);\n            }\n          }\n        })\n      );\n    })\n  );\n});\n\nself.addEventListener('message', (event) => {\n  if (event.data === 'SKIP_WAITING') {\n    self.skipWaiting();\n  }\n});\n\nself.addEventListener('fetch', (event) => {\n  if (event.request.headers.has('range')) {\n    return;\n  }\n\n  event.respondWith(\n    caches.match(event.request).then((response) => {\n      if (response) {\n        return response;\n      }\n\n      return fetch(event.request).then((response) => {\n        const url = event.request.url;\n\n        if (purge || event.request.method !== 'GET' || !verifyUrl(url)) {\n          return response;\n        }\n\n        // See: <https://developers.google.com/web/fundamentals/primers/service-workers#cache_and_return_requests>\n        let responseToCache = response.clone();\n\n        caches.open(swconf.cacheName).then((cache) => {\n          cache.put(event.request, responseToCache);\n        });\n        return response;\n      });\n    })\n  );\n});\n"],"names":["importScripts","concat","baseurl","purge","swconf","verifyUrl","url","requestPath","URL","pathname","path","denyPaths","startsWith","self","addEventListener","event","waitUntil","caches","open","cacheName","then","cache","addAll","resources","keys","keyList","Promise","all","map","key","delete","data","skipWaiting","request","headers","has","respondWith","match","response","fetch","method","responseToCache","clone","put"],"mappings":"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"}